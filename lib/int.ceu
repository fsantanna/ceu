-- LOGICAL

func not: _int -> _int {
    return _(!$arg)
}

func and: [_int,_int] -> _int {
    return _($arg._1 && $arg._2)
}

func or: [_int,_int] -> _int {
    return _($arg._1 || $arg._2)
}

-- RELATIONAL

func eq: [_int,_int] -> _int {
    return _($arg._1 == $arg._2)
}

func neq: [_int,_int] -> _int {
    return _($arg._1 != $arg._2)
}

func gt: [_int,_int] -> _int {
    return _($arg._1 > $arg._2)
}

func lt: [_int,_int] -> _int {
    return _($arg._1 < $arg._2)
}


func gte: [_int,_int] -> _int {
    return _($arg._1 >= $arg._2)
}

func lte: [_int,_int] -> _int {
    return _($arg._1 <= $arg._2)
}

-- ARITHMETIC

func umn: _int -> _int {
    return _(-$arg)
}

func add: [_int,_int] -> _int {
    return _($arg._1 + $arg._2)
}

func sub: [_int,_int] -> _int {
    return _($arg._1 - $arg._2)
}

func mul: [_int,_int] -> _int {
    return _($arg._1 * $arg._2)
}

func div: [_int,_int] -> _int {
    return _($arg._1 / $arg._2)
}

func rem: [_int,_int] -> _int {
    return _($arg._1 % $arg._2)
}
